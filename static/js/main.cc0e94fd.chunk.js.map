{"version":3,"sources":["store/data/types.ts","store/data/actions.ts","components/LineChart/index.tsx","components/Slider/SliderHandle.tsx","components/Slider/index.tsx","components/Timeline/index.tsx","store/ui/actions.ts","store/ui/types.ts","components/QuakeMap/index.tsx","routes/index.tsx","App.tsx","serviceWorker.ts","store/data/reducers.ts","store/ui/reducers.ts","store/index.ts","index.tsx"],"names":["AccelerationDirection","WaveType","getJsonPath","file","receiveAcceleration","direction","values","type","receiveWave","waveType","waveData","accelColors","EW","NS","Z","LineChart","connect","state","data","dispatch","fetchAccelerationAction","getState","a","acceleration","Promise","resolve","Object","keys","forEach","key","count","oboe","toLocaleLowerCase","node","val","drop","done","map","toLowerCase","filter","OrderedSet","props","useEffect","size","style","flexDirection","idx","position","top","left","fontSize","color","pointerEvents","height","width","toJS","containerComponent","responsive","padding","stroke","strokeWidth","parent","zIndex","useStyles","makeStyles","theme","createStyles","root","background","topNotch","borderLeft","borderRight","borderTop","bottomNotch","bottom","borderBottom","SliderHandle","classes","className","progress","flexGrow","display","bar","flex","alignSelf","justifyContent","paddingTop","barLabels","opacity","cursor","barLabelsUnit","activeBarLabel","fontWeight","Slider","children","Array","from","TOTAL_DURATION","labelVal","Typography","onClick","jumpToTime","clsx","timeElapsed","component","paddingRight","timelineContents","title","textAlign","marginBottom","textTransform","debug","minWidth","minHeight","controls","justifySelf","clock","Timeline","ui","play","pause","stop","incrementTick","React","useState","animationFrame","setAnimationFrame","onAnimationFrame","interval","isPlaying","setInterval","clearInterval","percentDone","accelDataWidth","accelDataPadding","soundLength","soundPadding","soundProgressSeconds","isSoundPlaying","Date","setSeconds","getSeconds","Paper","IconButton","aria-label","htmlColor","getHours","getMinutes","time","url","process","playStatus","autoLoad","loop","volume","playFromPosition","undefined","initialViewState","window","innerWidth","innerHeight","longitude","latitude","zoom","maxZoom","minZoom","bearing","pitch","scatterData","coords","lat","long","name","QuakeMap","fetchWaveAction","waves","P","S","elapsedSeconds","pWaveLayer","GeoJsonLayer","id","pickable","stroked","filled","lineWidthMinPixels","getLineColor","d","properties","lineWidthUnits","getLineWidth","updateTriggers","transitions","duration","easing","d3","enter","value","sWaveLayer","scatterLayer","ScatterplotLayer","radiusScale","radiusMinPixels","radiusMaxPixels","getPosition","getFillColor","getRadius","characterSet","location","split","reduce","acc","arr","push","labelLayer","TextLayer","getText","getSize","getAngle","getTextAnchor","getAlignmentBaseline","getPixelOffset","getColor","controller","layers","mapStyle","mapboxApiAccessToken","routes","path","exact","main","icon","Icon","text","paper","spacing","menuButton","marginRight","hide","drawer","flexShrink","whiteSpace","drawerPaper","drawerOpen","transition","create","sharp","enteringScreen","drawerClose","leavingScreen","overflowX","breakpoints","up","grow","menuItem","infoPanel","toolbar","alignItems","mixins","fontFamily","lineHeight","subtitle","paddingBottom","letterSpacing","metadata","stats","marginTop","statLabel","statValue","toggleButton","right","borderRadius","border","toggleButtonLabel","toggleButtonText","withRouter","isDrawerOpen","setIsDrawerOpen","loadCSS","document","querySelector","CssBaseline","Drawer","variant","Button","src","alt","Divider","List","route","ListItem","button","Link","to","selected","pathname","ListItemIcon","marginLeft","ListItemText","primary","disableElevation","label","Switch","index","Boolean","hostname","match","initialState","tick","rootReducer","combineReducers","action","reduxDevtoolsExtensionOptions","actionSanitizer","stateSanitizer","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","ReactDOM","render","basename","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.cc0e94fd.chunk.js","sourcesContent":["import { OrderedSet } from \"immutable\";\n\nexport enum AccelerationDirection {\n  EW = \"EW\",\n  NS = \"NS\",\n  Z = \"Z\"\n}\n\nexport enum WaveType {\n  P = \"P\",\n  S = \"S\"\n}\n\nexport type AccelerationValues = OrderedSet<number>;\nexport type AccelerationData = {\n  [TKey in AccelerationDirection]: AccelerationValues;\n};\n\nexport type WaveTravelTimeData = {\n  [TKey in WaveType]: any;\n};\n\nexport interface DataState {\n  acceleration: AccelerationData;\n  waves: WaveTravelTimeData;\n}\n\nexport const FETCH_ACCELERATION = \"FETCH_ACCELERATION\";\nexport const RECEIVE_ACCELERATION = \"RECEIVE_ACCELERATION\";\n\nexport const FETCH_WAVE = \"FETCH_WAVE\";\nexport const RECEIVE_WAVE = \"RECEIVE_WAVE\";\n\nexport interface FetchAccelerationAction {\n  type: typeof FETCH_ACCELERATION;\n}\n\nexport interface ReceiveAccelerationAction {\n  type: typeof RECEIVE_ACCELERATION;\n  direction: AccelerationDirection;\n  values: AccelerationValues;\n}\n\nexport interface FetchWaveAction {\n  type: typeof FETCH_WAVE;\n}\n\nexport interface ReceiveWaveAction {\n  type: typeof RECEIVE_WAVE;\n  waveType: WaveType;\n  waveData: any;\n}\n\nexport type DataActionTypes =\n  | FetchAccelerationAction\n  | ReceiveAccelerationAction\n  | FetchWaveAction\n  | ReceiveWaveAction;\n","import {\n  DataState,\n  AccelerationDirection,\n  ReceiveAccelerationAction,\n  AccelerationValues,\n  RECEIVE_ACCELERATION,\n  WaveType,\n  RECEIVE_WAVE,\n  ReceiveWaveAction\n} from \"./types\";\n\nimport { Action } from \"redux\";\nimport { ThunkAction } from \"redux-thunk\";\nimport oboe from \"oboe\";\nimport { OrderedSet } from \"immutable\";\n\nconst getJsonPath = (file: string) =>\n  `https://cdn.jsdelivr.net/gh/civicnet/cutremur77@latest/public/data/${file}`;\n\nexport function receiveAcceleration(\n  direction: AccelerationDirection,\n  values: AccelerationValues\n): ReceiveAccelerationAction {\n  return {\n    type: RECEIVE_ACCELERATION,\n    direction,\n    values\n  };\n}\n\nexport const fetchAcceleration = (): ThunkAction<\n  void,\n  DataState,\n  null,\n  Action<string>\n> => async (dispatch, getState) => {\n  if (getState().acceleration) {\n    return Promise.resolve();\n  }\n\n  Object.keys(AccelerationDirection).forEach(key => {\n    let count = 0;\n    oboe(getJsonPath(`${key.toLocaleLowerCase()}_min.json`))\n      .node(\"!.*\", (val: any) => {\n        // Only consider every 10th value (each tick is 0.005sec)\n        if (count === 10) {\n          count = 0;\n          return val;\n        }\n        count++;\n        return oboe.drop;\n      })\n      .done((data: [any]) => {\n        const values = data\n          .map((val: any) => {\n            return val[key.toLowerCase()];\n          })\n          .filter(val => !!val);\n\n        dispatch(\n          receiveAcceleration(key as AccelerationDirection, OrderedSet(values))\n        );\n      });\n  });\n};\n\nexport function receiveWave(\n  waveType: WaveType,\n  waveData: any\n): ReceiveWaveAction {\n  return {\n    type: RECEIVE_WAVE,\n    waveType,\n    waveData\n  };\n}\n\nexport const fetchWave = (): ThunkAction<\n  void,\n  DataState,\n  null,\n  Action<string>\n> => async (dispatch, getState) => {\n  if (getState().waves) {\n    return Promise.resolve();\n  }\n\n  oboe(getJsonPath(`travel_time_p.geojson`)).done(data => {\n    dispatch(receiveWave(WaveType.P, data));\n  });\n\n  oboe(getJsonPath(`travel_time_s.geojson`)).done(data => {\n    dispatch(receiveWave(WaveType.S, data));\n  });\n};\n","import React, { useEffect } from \"react\";\n\nimport { VictoryLine, VictoryContainer } from \"victory\";\nimport { AccelerationDirection, DataState } from \"../../store/data/types\";\nimport { AppState } from \"../../store\";\nimport { fetchAcceleration } from \"../../store/data/actions\";\nimport { connect } from \"react-redux\";\n\nconst accelColors = {\n  [AccelerationDirection.EW]: \"#c43a31\",\n  [AccelerationDirection.NS]: \"#eceac7\",\n  [AccelerationDirection.Z]: \"#c0978d\"\n};\n\nconst mapStateToProps = (state: AppState) => ({\n  data: state.data\n});\n\nconst mapDispatchToProps = (dispatch: any) => ({\n  fetchAccelerationAction: () => dispatch(fetchAcceleration())\n});\n\ninterface Props {\n  data: DataState;\n  fetchAccelerationAction: typeof fetchAcceleration;\n  style?: React.CSSProperties;\n}\n\nconst ConnectedLineChart: React.FC<Props> = props => {\n  const { fetchAccelerationAction } = props;\n  useEffect(() => {\n    fetchAccelerationAction();\n  }, [fetchAccelerationAction]);\n\n  if (\n    !props.data.acceleration.EW.size ||\n    !props.data.acceleration.NS.size ||\n    !props.data.acceleration.Z.size\n  ) {\n    return null;\n  }\n\n  return (\n    <div style={{ ...props.style, flexDirection: \"column\" }}>\n      {Object.keys(props.data.acceleration).map((key, idx) => (\n        <div key={key}>\n          <span\n            style={{\n              position: \"absolute\",\n              top: idx * 20,\n              left: \"-70%\",\n              fontSize: 12,\n              color: accelColors[key as AccelerationDirection],\n              pointerEvents: \"none\"\n            }}\n          >\n            Accelerație {key} (cm/s<sup>2</sup>)\n          </span>\n          <VictoryLine\n            height={25}\n            width={400}\n            data={props.data.acceleration[key as AccelerationDirection].toJS()}\n            containerComponent={\n              <VictoryContainer responsive={true} height={25} />\n            }\n            padding={0}\n            style={{\n              data: {\n                stroke: accelColors[key as AccelerationDirection],\n                strokeWidth: 1.5\n              },\n              parent: {\n                position: \"absolute\",\n                top: idx * 20,\n                zIndex: 3 - idx\n              }\n            }}\n          />\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport const LineChart = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ConnectedLineChart);\n","import React from \"react\";\nimport { makeStyles, Theme, createStyles } from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      width: 2,\n      height: \"100%\",\n      background: \"#fff\",\n      position: \"absolute\",\n      zIndex: 100\n    },\n    topNotch: {\n      position: \"absolute\",\n      top: 0,\n      left: -9,\n      width: 0,\n      height: 0,\n      borderLeft: \"10px solid transparent\",\n      borderRight: \"10px solid transparent\",\n      borderTop: \"10px solid #fff\"\n    },\n    bottomNotch: {\n      position: \"absolute\",\n      bottom: 0,\n      left: -9,\n      width: 0,\n      height: 0,\n      borderLeft: \"10px solid transparent\",\n      borderRight: \"10px solid transparent\",\n      borderBottom: \"10px solid #fff\"\n    }\n  })\n);\n\ninterface Props {\n  progress: number;\n}\n\nexport const SliderHandle: React.FC<Props> = (props: Props) => {\n  const classes = useStyles();\n\n  return (\n    <div\n      className={classes.root}\n      style={{ left: `calc(${props.progress}% - 3px)` }}\n    >\n      <div className={classes.topNotch} />\n      <div className={classes.bottomNotch} />\n    </div>\n  );\n};\n","import React from \"react\";\nimport clsx from \"clsx\";\nimport { SliderHandle } from \"./SliderHandle\";\nimport { makeStyles, Theme, createStyles, Typography } from \"@material-ui/core\";\nimport { TOTAL_DURATION } from \"../Timeline\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      flexGrow: 1,\n      display: \"flex\",\n      position: \"relative\"\n    },\n    bar: {\n      // background: '#f00',\n      flex: 1,\n      height: 20,\n      alignSelf: \"flex-end\",\n      // marginBottom: 20,\n      borderTop: \"2px dashed #3A3630\",\n      flexDirection: \"row\",\n      justifyContent: \"space-between\",\n      display: \"flex\",\n      paddingTop: 4\n    },\n    barLabels: {\n      // display: 'flex',\n      display: \"inline-block\",\n      color: \"#fff\",\n      fontSize: 12,\n      opacity: 0.7,\n      cursor: \"pointer\"\n    },\n    barLabelsUnit: {\n      fontSize: 10\n    },\n    activeBarLabel: {\n      fontWeight: \"bold\",\n      opacity: 1\n    }\n  })\n);\n\ninterface Props {\n  progress: number;\n  children?: React.ReactElement;\n  timeElapsed: number;\n  jumpToTime: (_: number) => void;\n}\n\nexport const Slider: React.FC<Props> = (props: Props) => {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      {props.children}\n      <div className={classes.bar}>\n        {Array.from(Array(TOTAL_DURATION / 10 + 1).keys()).map(idx => {\n          const labelVal = idx * 10;\n          return (\n            <Typography\n              key={`timestamp-${idx}`}\n              onClick={() => props.jumpToTime(labelVal)}\n              className={clsx(\n                classes.barLabels,\n                labelVal < props.timeElapsed ? classes.activeBarLabel : null\n              )}\n              component=\"span\"\n            >\n              {labelVal || \"00\"}\n              <Typography className={classes.barLabelsUnit} component=\"span\">\n                S\n              </Typography>\n            </Typography>\n          );\n        })}\n      </div>\n      <SliderHandle progress={props.progress} />\n    </div>\n  );\n};\n","import React from \"react\";\nimport Paper from \"@material-ui/core/Paper\";\nimport PlayArrowIcon from \"@material-ui/icons/PlayCircleOutlineOutlined\";\nimport PauseIcon from \"@material-ui/icons/PauseCircleFilledOutlined\";\nimport {\n  IconButton,\n  makeStyles,\n  createStyles,\n  Theme,\n  Typography,\n  CardContent,\n  Card\n} from \"@material-ui/core\";\nimport { LineChart } from \"../LineChart\";\nimport { Slider } from \"../Slider\";\nimport {\n  controlsPlay,\n  controlsPause,\n  controlsStop,\n  controlsIncrementTick\n} from \"../../store/ui/actions\";\nimport { AppState } from \"../../store\";\nimport { UIState, TICK_DURATION } from \"../../store/ui/types\";\nimport { connect } from \"react-redux\";\nimport ReactSound from \"react-sound\";\n// import audio from 'audio.mp3';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      position: \"absolute\",\n      background: \"#5B554D\",\n      width: \"60vw\",\n      bottom: 20,\n      left: \"20vw\",\n      padding: 8,\n      paddingRight: 20\n    },\n    timelineContents: {\n      display: \"flex\",\n      flex: 1,\n      height: 84\n    },\n    title: {\n      color: \"#38342F\",\n      textAlign: \"left\",\n      fontWeight: \"bold\",\n      fontSize: 12,\n      marginBottom: 12,\n      textTransform: \"uppercase\"\n    },\n    debug: {\n      position: \"absolute\",\n      bottom: 20,\n      left: 20,\n      textAlign: \"left\",\n      minWidth: 200,\n      minHeight: 100\n    },\n    controls: {\n      height: \"100%\",\n      alignSelf: \"center\",\n      justifySelf: \"center\",\n      minWidth: 80,\n      position: \"relative\"\n    },\n    clock: {\n      fontSize: 12,\n      fontWeight: \"bold\",\n      position: \"absolute\",\n      width: \"100%\",\n      bottom: -4\n    }\n  })\n);\n\nconst FRAME_DURATION = TICK_DURATION; // 1000 / FPS;\nexport const TOTAL_DURATION = 80;\n\nconst mapStateToProps = (state: AppState) => ({\n  ui: state.ui\n});\n\nconst mapDispatchToProps = (dispatch: any) => ({\n  play: () => dispatch(controlsPlay()),\n  pause: () => dispatch(controlsPause()),\n  stop: () => dispatch(controlsStop()),\n  incrementTick: () => dispatch(controlsIncrementTick())\n});\n\ninterface Props {\n  ui: UIState;\n  play: typeof controlsPlay;\n  pause: typeof controlsPause;\n  stop: typeof controlsStop;\n  incrementTick: typeof controlsIncrementTick;\n  onAnimationFrame: (n: number) => void;\n}\n\nexport const ConnectedTimeline: React.FC<Props> = (props: Props) => {\n  const classes = useStyles();\n\n  const [animationFrame, setAnimationFrame] = React.useState(600);\n  const [soundStartPosition, setSoundStartPosition] = React.useState(0);\n\n  //\n  React.useEffect(() => {\n    props.onAnimationFrame(animationFrame);\n\n    let interval: any = null;\n    if (props.ui.isPlaying) {\n      interval = setInterval(() => {\n        setAnimationFrame(animationFrame + 4);\n\n        if (animationFrame * FRAME_DURATION >= TOTAL_DURATION) {\n          props.pause();\n        }\n      }, /* FRAME_DURATION * 1000 */ 20);\n    } else if (!props.ui.isPlaying && animationFrame !== 0 && interval) {\n      clearInterval(interval);\n    }\n\n    return () => clearInterval(interval);\n  });\n\n  const onAnimationPlayback = () => {\n    !props.ui.isPlaying ? props.play() : props.pause();\n  };\n\n  const timeElapsed = animationFrame * FRAME_DURATION;\n  const percentDone = (timeElapsed * 100) / TOTAL_DURATION;\n\n  const accelDataWidth = (47 * 100) / TOTAL_DURATION;\n  const accelDataPadding = (33 * 100) / TOTAL_DURATION;\n\n  const soundLength = (26 * 100) / TOTAL_DURATION;\n  const soundPadding = (42 * 100) / TOTAL_DURATION;\n\n  const soundProgressSeconds = percentDone - soundPadding;\n  // console.log(soundProgressSeconds);\n  const isSoundPlaying =\n    soundProgressSeconds > 0 && soundProgressSeconds < 26 && props.ui.isPlaying;\n  // const soundProgressMs = soundProgressSeconds * TOTAL_DURATION * 1000;\n\n  const clock = new Date(\"1977-03-04 21:20:26\");\n  clock.setSeconds(clock.getSeconds() + timeElapsed);\n\n  const jumpToTime = (time: number) => {\n    // setSoundStartPosition(soundProgressPercentage > 0 && soundProgressPercentage < 100 ? soundProgressMs : 0);\n\n    if (props.ui.isPlaying) {\n      props.pause();\n    }\n    setAnimationFrame(time / FRAME_DURATION);\n    props.onAnimationFrame(animationFrame);\n  };\n\n  return (\n    <>\n      {/* <Card className={classes.debug}>\n        <CardContent>\n          <Typography variant=\"body2\" component=\"p\">\n            Frame #: <strong>{animationFrame}</strong>\n          </Typography>\n          <Typography variant=\"body2\" component=\"p\">\n            Time : <strong>{timeElapsed.toLocaleString(\"ro-RO\")} sec</strong>\n          </Typography>\n        </CardContent>\n      </Card> */}\n      <Paper className={classes.root} style={{}}>\n        <Typography component=\"h3\" className={classes.title}>\n          Propagare seism 1977\n        </Typography>\n        <div className={classes.timelineContents}>\n          <div className={classes.controls}>\n            <IconButton aria-label=\"playback\" onClick={onAnimationPlayback}>\n              {!props.ui.isPlaying ? (\n                <PlayArrowIcon fontSize=\"large\" htmlColor=\"#eceac7\" />\n              ) : (\n                <PauseIcon fontSize=\"large\" htmlColor=\"#eceac7\" />\n              )}\n            </IconButton>\n            <Typography className={classes.clock}>\n              {clock.getHours()}:{clock.getMinutes()}:{\" \"}\n              <Typography\n                style={{ color: \"#fff\", fontSize: 12 }}\n                component=\"span\"\n              >\n                {clock.getSeconds()}\n              </Typography>\n            </Typography>\n          </div>\n          <Slider\n            progress={percentDone}\n            timeElapsed={timeElapsed}\n            jumpToTime={jumpToTime}\n          >\n            <div>\n              <LineChart\n                style={{\n                  position: \"absolute\",\n                  top: 0,\n                  left: `${accelDataPadding}%`,\n                  width: `${accelDataWidth}%`\n                }}\n              />\n              <div\n                style={{\n                  height: 2,\n                  background: \"#fff\",\n                  width: `${soundLength}%`,\n                  left: `${soundPadding}%`,\n                  position: \"absolute\"\n                }}\n              >\n                <ReactSound\n                  url={process.env.PUBLIC_URL + \"/data/audio.mp3\"}\n                  playStatus={isSoundPlaying ? \"PLAYING\" : \"PAUSED\"}\n                  autoLoad={true}\n                  loop={false}\n                  volume={20}\n                  playFromPosition={\n                    isSoundPlaying ? undefined : soundProgressSeconds * 1000\n                  }\n                />\n              </div>\n            </div>\n          </Slider>\n        </div>\n      </Paper>\n    </>\n  );\n};\n\nexport const Timeline = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ConnectedTimeline);\n","import {\n  CONTROLS_PLAY,\n  ControlsPlayAction,\n  CONTROLS_PAUSE,\n  CONTROLS_STOP,\n  CONTROLS_INC_TICK,\n  ControlsPauseAction,\n  ControlsStopAction,\n  ControlsIncrementTickAction\n} from \"./types\";\n\nexport function controlsPlay(): ControlsPlayAction {\n  return {\n    type: CONTROLS_PLAY\n  };\n}\n\nexport function controlsPause(): ControlsPauseAction {\n  return {\n    type: CONTROLS_PAUSE\n  };\n}\n\nexport function controlsStop(): ControlsStopAction {\n  return {\n    type: CONTROLS_STOP\n  };\n}\n\nexport function controlsIncrementTick(): ControlsIncrementTickAction {\n  return {\n    type: CONTROLS_INC_TICK\n  };\n}\n","export const TICK_DURATION = 0.05; // seconds\n\nexport interface UIState {\n  isPlaying: boolean;\n  tick: number;\n}\n\nexport const CONTROLS_PLAY = \"CONTROLS_PLAY\";\nexport const CONTROLS_PAUSE = \"CONTROLS_PAUSE\";\nexport const CONTROLS_STOP = \"CONTROLS_STOP\";\nexport const CONTROLS_INC_TICK = \"CONTROLS_INC_TICK\";\n\nexport interface ControlsPlayAction {\n  type: typeof CONTROLS_PLAY;\n}\n\nexport interface ControlsPauseAction {\n  type: typeof CONTROLS_PAUSE;\n}\n\nexport interface ControlsStopAction {\n  type: typeof CONTROLS_STOP;\n}\n\nexport interface ControlsIncrementTickAction {\n  type: typeof CONTROLS_INC_TICK;\n}\n\nexport type UIActionTypes =\n  | ControlsPlayAction\n  | ControlsPauseAction\n  | ControlsStopAction\n  | ControlsIncrementTickAction;\n","import React, { useEffect } from \"react\";\n// import { makeStyles, Theme, createStyles } from \"@material-ui/core\";\n\nimport { StaticMap } from \"react-map-gl\";\nimport DeckGL from \"@deck.gl/react\";\nimport { GeoJsonLayer, ScatterplotLayer, TextLayer } from \"@deck.gl/layers\";\n\nimport { AppState } from \"../../store\";\nimport { fetchWave } from \"../../store/data/actions\";\nimport { connect } from \"react-redux\";\nimport { DataState, WaveType } from \"../../store/data/types\";\nimport { TICK_DURATION } from \"../../store/ui/types\";\nimport * as d3 from \"d3-ease\";\n\n/* const useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      width: 3,\n      height: \"100%\",\n      background: \"#fff\",\n      position: \"absolute\"\n    }\n  })\n); */\n\nconst mapStateToProps = (state: AppState) => ({\n  data: state.data\n});\n\nconst mapDispatchToProps = (dispatch: any) => ({\n  fetchWaveAction: () => dispatch(fetchWave())\n});\n\nconst initialViewState = {\n  width: window.innerWidth,\n  height: window.innerHeight,\n  longitude: 23.5602928,\n  latitude: 46.0291793,\n  zoom: 6,\n  maxZoom: 20,\n  minZoom: 1,\n  bearing: 0,\n  pitch: 0\n};\n\nconst scatterData = [\n  {\n    coords: {\n      lat: 44.44,\n      long: 26.16\n    },\n    name: \"Stația seismică INCERC\"\n  },\n  {\n    coords: {\n      lat: 45.77,\n      long: 26.76\n    },\n    name: \"Epicentru\"\n  }\n];\n\ninterface Props {\n  data: DataState;\n  fetchWaveAction: typeof fetchWave;\n  animationFrame: number;\n}\n\nexport const ConnectedQuakeMap: React.FC<Props> = (props: Props) => {\n  // const classes = useStyles();\n\n  const { fetchWaveAction } = props;\n  useEffect(() => {\n    fetchWaveAction();\n  }, [fetchWaveAction]);\n\n  const elapsedSeconds = props.animationFrame * TICK_DURATION;\n  // console.log('yy', elapsedSeconds)\n\n  const pWaveLayer = new GeoJsonLayer({\n    id: \"p-geojson-layer\",\n    data: props.data.waves[WaveType.P],\n    pickable: false,\n    stroked: true,\n    filled: false,\n    // lineWidthScale: 200,\n    lineWidthMinPixels: 1,\n    getLineColor: (d: any) => {\n      let opacity =\n        d.properties[\"Sec_P\"] < elapsedSeconds &&\n        d.properties[\"Sec_P\"] > elapsedSeconds - 2\n          ? 255\n          : 0;\n\n      if (d.properties[\"Sec_P\"] < elapsedSeconds - 2) {\n        opacity = 30;\n      }\n\n      if (d.properties[\"Sec_P\"] < elapsedSeconds - 20) {\n        opacity = 10;\n      }\n\n      return [200, 160, 80, opacity];\n    },\n    lineWidthUnits: \"pixels\",\n    getLineWidth: (d: any) => {\n      return d.properties[\"Sec_P\"] < elapsedSeconds &&\n        d.properties[\"Sec_P\"] > elapsedSeconds - 2\n        ? 2\n        : 1;\n    },\n    updateTriggers: {\n      getLineColor: [elapsedSeconds],\n      getLineWidth: [elapsedSeconds]\n    },\n    transitions: {\n      getLineColor: {\n        duration: 500,\n        easing: d3.easeLinear,\n        enter: (value: any) => [value[0], value[1], value[2], 0] // fade in\n      }\n    }\n  });\n\n  const sWaveLayer = new GeoJsonLayer({\n    id: \"s-geojson-layer\",\n    data: props.data.waves[WaveType.S],\n    pickable: false,\n    stroked: true,\n    filled: false,\n    // lineWidthScale: 200,\n    lineWidthMinPixels: 1,\n    getLineColor: (d: any) => {\n      let opacity =\n        d.properties[\"Sec_S\"] < elapsedSeconds &&\n        d.properties[\"Sec_S\"] > elapsedSeconds - 2\n          ? 255\n          : 0;\n\n      if (d.properties[\"Sec_S\"] < elapsedSeconds - 2) {\n        opacity = 30;\n      }\n\n      if (d.properties[\"Sec_S\"] < elapsedSeconds - 20) {\n        opacity = 10;\n      }\n\n      return [200, 80, 80, opacity];\n    },\n    lineWidthUnits: \"pixels\",\n    getLineWidth: (d: any) => {\n      return d.properties[\"Sec_S\"] < elapsedSeconds &&\n        d.properties[\"Sec_S\"] > elapsedSeconds - 2\n        ? 2\n        : 1;\n    },\n    updateTriggers: {\n      getLineColor: [elapsedSeconds],\n      getLineWidth: [elapsedSeconds]\n    },\n    transitions: {\n      getLineColor: {\n        duration: 500,\n        easing: d3.easeLinear,\n        enter: (value: any) => [value[0], value[1], value[2], 0] // fade in\n      }\n    }\n  });\n\n  const scatterLayer = new ScatterplotLayer({\n    id: \"scatterplot-layer\",\n    data: scatterData,\n    pickable: false,\n    filled: true,\n    radiusScale: 15,\n    radiusMinPixels: 1,\n    radiusMaxPixels: 100,\n    getPosition: (d: any) => [d.coords.long, d.coords.lat],\n    getFillColor: [255, 0, 0],\n    getRadius: 300\n  });\n\n  const characterSet = scatterData\n    .map(location => {\n      return location.name.split(\"\");\n    })\n    .reduce((acc, arr) => {\n      arr.forEach(val => acc.push(val));\n      return acc;\n    }, []);\n\n  const labelLayer = new TextLayer({\n    id: \"text-layer\",\n    data: scatterData,\n    pickable: false,\n    getPosition: (d: any) => [d.coords.long, d.coords.lat],\n    getText: (d: any) => d.name,\n    getSize: 20,\n    getAngle: 0,\n    getTextAnchor: \"middle\",\n    getAlignmentBaseline: \"bottom\",\n    characterSet,\n    getPixelOffset: [0, -20],\n    getColor: [255, 230, 200]\n  });\n\n  return (\n    <DeckGL\n      initialViewState={initialViewState}\n      controller={true}\n      layers={[pWaveLayer, sWaveLayer, scatterLayer, labelLayer]}\n    >\n      <StaticMap\n        width=\"100%\"\n        height=\"100%\"\n        mapStyle=\"mapbox://styles/claudiuc/ck7cg1f360fpu1jnkdksbg2xx/draft\"\n        mapboxApiAccessToken={process.env.REACT_APP_MAPBOX_TOKEN}\n      />\n    </DeckGL>\n  );\n};\n\nexport const QuakeMap = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ConnectedQuakeMap);\n","import React from \"react\";\nimport { Icon } from \"@material-ui/core\";\n// import About from \"../containers/AnimationContainer\";\n\nconst routes = [\n  {\n    path: \"/\",\n    exact: true,\n    main: () => null,\n    icon: <Icon className=\"fal fa-home\" fontSize=\"small\" />,\n    text: \"Atlas\"\n  },\n  {\n    path: \"/despre\",\n    main: () => <div>Despre</div>,\n    icon: <Icon className=\"fal fa-question-circle\" fontSize=\"small\" />,\n    text: \"Ghid\"\n  },\n  {\n    path: \"/changelog\",\n    main: () => <div>Change</div>,\n    icon: <Icon className=\"fal fa-layer-group\" fontSize=\"small\" />,\n    text: \"Seturi de date\"\n  },\n  {\n    path: \"/changelog\",\n    main: () => <div>Change</div>,\n    icon: <Icon className=\"fal fa-info-circle\" fontSize=\"small\" />,\n    text: \"Despre\"\n  },\n  {\n    path: \"/changelog\",\n    main: () => <div>Change</div>,\n    icon: <Icon className=\"fal fa-at\" fontSize=\"small\" />,\n    text: \"Contact\"\n  }\n];\n\nexport default routes;\n","import React from \"react\";\nimport \"./App.css\";\nimport { Timeline } from \"./components/Timeline\";\nimport { QuakeMap } from \"./components/QuakeMap\";\nimport {\n  CssBaseline,\n  Drawer,\n  Divider,\n  List,\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n  Switch,\n  // useTheme,\n  Button,\n  makeStyles,\n  Typography,\n  Icon\n} from \"@material-ui/core\";\nimport clsx from \"clsx\";\n\nimport { withRouter, RouteComponentProps, Route, Link } from \"react-router-dom\";\nimport { loadCSS } from \"fg-loadcss\";\nimport routes from \"./routes\";\n\nconst drawerWidth = 240;\nexport const APP_BAR_COLOR = \"#222f3e\";\n\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    padding: theme.spacing(1)\n  },\n  menuButton: {\n    marginRight: 36\n  },\n  hide: {\n    display: \"none\"\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n    whiteSpace: \"nowrap\"\n  },\n  drawerPaper: {\n    // backgroundColor: APP_BAR_COLOR,\n    background: \"#1E1515\"\n  },\n  drawerOpen: {\n    width: drawerWidth,\n    transition: theme.transitions.create(\"width\", {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen\n    })\n  },\n  drawerClose: {\n    transition: theme.transitions.create(\"width\", {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen\n    }),\n    overflowX: \"hidden\",\n    width: theme.spacing(7) + 1,\n    [theme.breakpoints.up(\"sm\")]: {\n      width: theme.spacing(9) + 1\n    }\n  },\n  grow: {\n    flexGrow: 1\n  },\n  menuItem: {\n    // color: \"#FFF\",\n    // fontWeight: \"bold\",\n    // opacity: 0.7,\n    color: \"#FCF1E4\"\n  },\n  infoPanel: {\n    position: \"absolute\",\n    left: 110,\n    top: 35,\n    width: 260,\n    zIndex: 100,\n    color: \"#AFA294\",\n    textAlign: \"left\",\n    pointerEvents: \"none\"\n  },\n  toolbar: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"flex-end\",\n    padding: theme.spacing(0, 1),\n    ...theme.mixins.toolbar\n  },\n  title: {\n    fontFamily: \"'Roboto Condensed', Roboto, sans-serif\",\n    fontWeight: 700,\n    fontSize: \"3.5em\",\n    lineHeight: 0.9\n  },\n  subtitle: {\n    fontWeight: 300,\n    fontSize: \"1.5em\",\n    paddingBottom: 10,\n    marginBottom: 20,\n    borderBottom: \"1px solid #6B655D\",\n    letterSpacing: 2\n  },\n  metadata: {\n    fontWeight: 300\n  },\n  stats: {\n    marginTop: 40\n  },\n  statLabel: {\n    marginBottom: 20,\n    fontWeight: 300\n  },\n  statValue: {\n    color: \"#CC3333\",\n    fontSize: \"3em\",\n    lineHeight: 0.9,\n    fontWeight: 700\n  },\n  toggleButton: {\n    position: \"absolute\",\n    right: 35,\n    top: 35,\n    width: 120,\n    height: 120,\n    borderRadius: \"50%\",\n    zIndex: 100,\n    background: \"#5C574D\",\n    border: \"1px solid #9C9489\",\n    color: \"#9C9489\"\n  },\n  toggleButtonLabel: {\n    flexDirection: \"column\"\n  },\n  toggleButtonText: {\n    lineHeight: 1,\n    marginTop: 12,\n    fontSize: 16,\n    fontWeight: \"bold\"\n  }\n}));\n\nconst App: React.FC<RouteComponentProps> = props => {\n  const [animationFrame, setAnimationFrame] = React.useState(0);\n\n  const classes = useStyles();\n  const [isDrawerOpen, setIsDrawerOpen] = React.useState(false);\n\n  const toggleDrawer = () => {\n    isDrawerOpen ? setIsDrawerOpen(false) : setIsDrawerOpen(true);\n  };\n\n  React.useEffect(() => {\n    loadCSS(\n      \"https://pro.fontawesome.com/releases/v5.10.1/css/all.css\",\n      document.querySelector(\"#font-awesome-css\")\n    );\n  }, []);\n\n  return (\n    <>\n      <CssBaseline />\n      <Drawer\n        variant=\"permanent\"\n        className={clsx(classes.drawer, {\n          [classes.drawerOpen]: isDrawerOpen,\n          [classes.drawerClose]: !isDrawerOpen\n        })}\n        classes={{\n          paper: clsx(classes.drawerPaper, {\n            [classes.drawerOpen]: isDrawerOpen,\n            [classes.drawerClose]: !isDrawerOpen\n          })\n        }}\n      >\n        <div className={classes.toolbar}>\n          <Button\n            component=\"a\"\n            onClick={toggleDrawer}\n            /* href=\"https://civicnet.ro\" */\n            style={{ display: \"flex\", flex: 1, justifyContent: \"center\" }}\n          >\n            {!isDrawerOpen ? (\n              <img\n                src=\"Logo_Cutremur_Simbol.svg\"\n                style={{ height: 32 }}\n                alt=\"CivicNet Logo\"\n              />\n            ) : (\n              <img\n                src=\"Logo_Cutremur_Full.svg\"\n                style={{ height: 32 }}\n                alt=\"CivicNet Logo\"\n              />\n            )}\n          </Button>\n          {/* <IconButton onClick={toggleDrawer}>\n            {!isDrawerOpen ? (\n              <ChevronRightIcon />\n            ) : (\n              <ChevronLeftIcon />\n            )}\n          </IconButton> */}\n        </div>\n        <Divider />\n        <List>\n          {routes.map(route => (\n            <ListItem\n              button\n              key={route.text}\n              component={Link}\n              to={route.path}\n              className={classes.menuItem}\n              selected={props.location.pathname === route.path}\n            >\n              <ListItemIcon\n                style={{ marginLeft: 12 }}\n                className={classes.menuItem}\n              >\n                {route.icon}\n              </ListItemIcon>\n              <ListItemText primary={route.text} />\n            </ListItem>\n          ))}\n        </List>\n      </Drawer>\n      <main>\n        <div className=\"App\">\n          <div className={classes.infoPanel}>\n            <Typography className={classes.title} component=\"h1\">\n              Cutremur\n            </Typography>\n            <Typography className={classes.subtitle} component=\"h2\">\n              4 martie 1977\n            </Typography>\n            <Typography className={classes.metadata}>\n              <strong>Vrancea</strong> - zona seismică\n            </Typography>\n            <Typography className={classes.metadata}>\n              <strong>7.4 Mw</strong> - magnitudine\n            </Typography>\n            <Typography className={classes.metadata}>\n              <strong>94 km</strong> - adâncime\n            </Typography>\n            <Typography className={classes.metadata}>\n              <strong>21:21</strong> - ora locală\n            </Typography>\n\n            <div className={classes.stats}>\n              <Typography className={classes.statValue}>1.578</Typography>\n              <Typography className={classes.statLabel}>decedați</Typography>\n              <Typography className={classes.statValue}>11.321</Typography>\n              <Typography className={classes.statLabel}>răniți</Typography>\n              <Typography className={classes.statValue}>32.897</Typography>\n              <Typography className={classes.statLabel}>\n                clădiri avariate\n              </Typography>\n              <Typography className={classes.statValue}>2 MLD $</Typography>\n              <Typography className={classes.statLabel}>\n                impact economic\n              </Typography>\n            </div>\n          </div>\n\n          <Button\n            variant=\"contained\"\n            color=\"inherit\"\n            disableElevation\n            classes={{\n              label: classes.toggleButtonLabel,\n              root: classes.toggleButton\n            }}\n          >\n            <Icon\n              className=\"fas fa-map-marked-alt\"\n              style={{ display: \"block\" }}\n            />\n            <div className={classes.toggleButtonText}>Vezi hărți</div>\n          </Button>\n          <QuakeMap animationFrame={animationFrame} />\n          <Timeline onAnimationFrame={setAnimationFrame} />\n        </div>\n        <Switch>\n          {routes.map((route, index) => (\n            <Route\n              key={index}\n              path={route.path}\n              exact={route.exact}\n              children={<route.main />}\n            />\n          ))}\n        </Switch>\n      </main>\n    </>\n  );\n};\n\nexport default withRouter(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import {\n  DataState,\n  AccelerationDirection,\n  DataActionTypes,\n  RECEIVE_ACCELERATION,\n  WaveType,\n  RECEIVE_WAVE\n} from \"./types\";\nimport { OrderedSet } from \"immutable\";\n\nconst initialState: DataState = {\n  acceleration: {\n    [AccelerationDirection.EW]: OrderedSet(),\n    [AccelerationDirection.NS]: OrderedSet(),\n    [AccelerationDirection.Z]: OrderedSet()\n  },\n  waves: {\n    [WaveType.S]: null,\n    [WaveType.P]: null\n  }\n};\n\nexport function DataReducer(\n  state = initialState,\n  action: DataActionTypes\n): DataState {\n  switch (action.type) {\n    case RECEIVE_ACCELERATION:\n      return {\n        ...state,\n        acceleration: {\n          ...state.acceleration,\n          [action.direction]: action.values\n        }\n      };\n    case RECEIVE_WAVE:\n      return {\n        ...state,\n        waves: {\n          ...state.waves,\n          [action.waveType]: action.waveData\n        }\n      };\n    default:\n      return state;\n  }\n}\n","import {\n  CONTROLS_PLAY,\n  CONTROLS_PAUSE,\n  CONTROLS_INC_TICK,\n  UIState,\n  UIActionTypes,\n  CONTROLS_STOP\n} from \"./types\";\n\nconst initialState: UIState = {\n  isPlaying: false,\n  tick: 0\n};\n\nexport function UIReducer(\n  state = initialState,\n  action: UIActionTypes\n): UIState {\n  switch (action.type) {\n    case CONTROLS_PLAY:\n      return {\n        ...state,\n        isPlaying: true\n      };\n    case CONTROLS_PAUSE:\n      return {\n        ...state,\n        isPlaying: false\n      };\n    case CONTROLS_STOP:\n      return {\n        ...state,\n        isPlaying: false,\n        tick: 0\n      };\n    case CONTROLS_INC_TICK:\n      return {\n        ...state,\n        tick: state.tick + 1\n      };\n    default:\n      return state;\n  }\n}\n","import { combineReducers, compose, createStore, applyMiddleware } from \"redux\";\nimport { DataReducer } from \"./data/reducers\";\nimport { RECEIVE_ACCELERATION } from \"./data/types\";\nimport thunk from \"redux-thunk\";\nimport { UIReducer } from \"./ui/reducers\";\n\nconst rootReducer = combineReducers({\n  data: DataReducer,\n  ui: UIReducer\n});\n\nexport const actionSanitizer = (action: any) => {\n  switch (action.type) {\n    case RECEIVE_ACCELERATION:\n      return {\n        ...action // Actually ok at 1/10 load\n      };\n    default:\n      return action;\n  }\n};\n\nconst stateSanitizer = (state: any) =>\n  state.data\n    ? { ...state, data: { ...state.data, acceleration: \"<ACCELERATION DATA>\" } }\n    : state;\n\nconst reduxDevtoolsExtensionOptions = {\n  actionSanitizer,\n  stateSanitizer\n};\n\nconst composeEnhancers =\n  ((window as any).__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ &&\n    (window as any).__REDUX_DEVTOOLS_EXTENSION_COMPOSE__(\n      reduxDevtoolsExtensionOptions\n    )) ||\n  compose;\n\nconst store = createStore(\n  rootReducer,\n  composeEnhancers(applyMiddleware(thunk))\n);\n\nexport default store;\nexport type AppState = ReturnType<typeof rootReducer>;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\n\nimport { HashRouter as Router } from \"react-router-dom\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <Router basename={process.env.PUBLIC_URL}>\n      <App />\n    </Router>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}